# we use class instead of directly using list so that user cannot access or modify data using other functionality of list and keeping use case specific to stack.

class Stack:
    def __init__(self):
        self.items=[]
        
    def is_not_empty(self):
        return not self.items
        #return len(self.items)==0
        
        
    def push(self,var):
        self.items.append(var)
        
    def pop(self):
        self.items.pop()
        
    def peek(self):
        return self.items[-1]
        
    def size(self):
        return len(self.items)
        

    # def __str__(self):  #if you don't add this function the it return the address of the instance
    #     return str(self.items)
        

        
        
        
if __name__ =='__main__':
    s = Stack() #create the object and call the constructor
    print(s)
    s.push(3)
    print(s)
    s.push(2)
    print(s.peek())
    s.push(4)
    print(s)
    s.pop()
    print(s)   
    
        #o/p with str on
        # []
        # [3]
        # 2
        # [3, 2, 4]
        # [3, 2]
        
        #o/p with str off  
        # <__main__.Stack object at 0x14cf5c663748>
        # <__main__.Stack object at 0x14cf5c663748>
        # 2
        # <__main__.Stack object at 0x14cf5c663748>
        # <__main__.Stack object at 0x14cf5c663748>
        
        

